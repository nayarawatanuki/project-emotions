{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GlobalStyle from '../../../styles/global';\nimport { App, Container, Content } from './styles.js';\nimport { uniqueId } from 'lodash';\nimport KidRow from '../../../components/KidList';\nimport api from 'axios';\nimport { response } from 'express';\n\nclass Kids extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.useState = {\n      kids: [],\n      setKids: []\n    };\n    this.useEffect = (() => {\n      api.get('listKids').then(response => {\n        setKids(response.data);\n      });\n    }, []);\n\n    this.updateKid = () => ({\n      id,\n      treatment,\n      code,\n      name,\n      rate,\n      birth,\n      parent,\n      note\n    }) => {\n      if (name !== \"\" && rate !== \"\" && birth !== \"\" && parent !== \"\" && note !== \"\") {\n        api.put(`http://localhost:3000/updatedKid/${id}`, {\n          file,\n          treatment,\n          code,\n          name,\n          rate,\n          birth,\n          parent,\n          note\n        }).then(response => {\n          console.log(response);\n          console.log(JSON.stringify({\n            \"tratamento\": treatment,\n            \"codigo\": code,\n            \"nome\": name,\n            \"grau\": rate,\n            \"data de nascimento\": birth,\n            \"responsavel\": parent,\n            \"observações\": note\n          }));\n          console.log(\"Criança atualizada!\");\n          window.alert('Criança atualizada!');\n          document.getElementById(\"rows\").style.backgroundColor = \"#fff\";\n        });\n      } else {\n        window.alert('Prencha todos oss campos');\n      }\n    };\n\n    this.deleteKid = _s(id => {\n      _s();\n\n      const [kid, setKid] = useState([]);\n      console.log(\"id delete\", id);\n      api.delete(`http://localhost:3000/deletedKid/${id}`).then(response => {\n        console.log(response.data);\n        window.alert(\"Criança apagada!\");\n        const newList = kid.filter(kid => kid.id !== id);\n        setKid(newList);\n      }).catch(error => {\n        console.log(error);\n      });\n    }, \"7CwMyjR36xZqs2rxeoCNkjNTHck=\");\n  }\n\n}","map":{"version":3,"sources":["D:/nayarawatanuki/OneDrive/projects/project-emotions/src/frontend/pages/PsycAcess/Kids/index.js"],"names":["React","Component","useState","useEffect","Link","GlobalStyle","App","Container","Content","uniqueId","KidRow","api","response","Kids","kids","setKids","get","then","data","updateKid","id","treatment","code","name","rate","birth","parent","note","put","file","console","log","JSON","stringify","window","alert","document","getElementById","style","backgroundColor","deleteKid","kid","setKid","delete","newList","filter","catch","error"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport GlobalStyle from '../../../styles/global';\r\nimport { App, Container, Content } from './styles.js';\r\n\r\nimport { uniqueId } from 'lodash';\r\nimport KidRow from '../../../components/KidList'\r\nimport api from 'axios';\r\nimport { response } from 'express';\r\n\r\nclass Kids extends Component {\r\n    \r\n    useState = {\r\n        kids: [],\r\n        setKids: []\r\n    };\r\n\r\n    useEffect = (() => {\r\n        \r\n        api.get('listKids')\r\n        .then((response) => {\r\n            setKids(response.data)\r\n        });\r\n    }, []);\r\n\r\n    updateKid = () => ({\r\n        id,\r\n        treatment,\r\n        code,\r\n        name,\r\n        rate,\r\n        birth,\r\n        parent,\r\n        note,\r\n    }) => {\r\n\r\n        if(name !== \"\" && rate !== \"\" && birth !== \"\" && parent !== \"\" && note !== \"\"){\r\n            api.put(`http://localhost:3000/updatedKid/${id}`,\r\n              { file, treatment, code, name, rate, birth, parent, note }\r\n            )\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(JSON.stringify({\r\n                    \"tratamento\": treatment,\r\n                    \"codigo\": code,\r\n                    \"nome\": name, \r\n                    \"grau\": rate,\r\n                    \"data de nascimento\": birth,\r\n                    \"responsavel\": parent,\r\n                    \"observações\": note\r\n                }));\r\n                console.log(\"Criança atualizada!\");\r\n                window.alert('Criança atualizada!');\r\n                document.getElementById(\"rows\").style.backgroundColor = \"#fff\";\r\n            });\r\n        }else{\r\n            window.alert('Prencha todos oss campos')\r\n        }\r\n    };\r\n\r\n    deleteKid = id => {\r\n        const [kid, setKid] = useState([]);\r\n\r\n        console.log(\"id delete\", id);\r\n        api.delete(`http://localhost:3000/deletedKid/${id}`)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            window.alert(\"Criança apagada!\");\r\n            \r\n            const newList = kid.filter((kid) => kid.id !== id);\r\n            setKid(newList);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}