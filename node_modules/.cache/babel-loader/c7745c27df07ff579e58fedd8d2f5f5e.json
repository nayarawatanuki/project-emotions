{"ast":null,"code":"var _jsxFileName = \"D:\\\\nayarawatanuki\\\\OneDrive\\\\projects\\\\project-emotions\\\\src\\\\frontend\\\\pages\\\\PsycAcess\\\\Activities\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GlobalStyle from '../../../global/styles';\nimport { App, Container, Content, Table } from './styles';\nimport api from '../../../services/api';\nimport { useKidContext } from '../../../context/kidContext';\nimport ActivityList from '../../../components/PsycAcess/ActivityList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TasksKid() {\n  _s();\n\n  const [list, setList] = useState([]);\n  const {\n    kid_id,\n    kid_name,\n    kid_photo,\n    saveId\n  } = useKidContext();\n  console.log({\n    kid_id,\n    kid_name\n  });\n  useEffect(() => {\n    console.log('entrou');\n\n    if (kid_id && kid_name) {\n      api.get(`/tasks/${kid_id}/${kid_name}/listTasks`).then(response => {\n        console.log({\n          activity: response.data\n        });\n        setList(response.data);\n      }).catch(error => {\n        console.error('error', error);\n      });\n    }\n  }, [kid_id, kid_name]);\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    if (kid_id) {\n      api.get(`/tasks/${kid_id}/listTaskResult`).then(response => {\n        console.log({\n          results: response.data\n        });\n        setResult(response.data);\n      }).catch(error => {\n        console.error('error', error);\n      });\n    }\n  }, [kid_id]);\n\n  async function updateActivity(_ref) {\n    let {\n      id,\n      name,\n      type,\n      emotion\n    } = _ref;\n\n    if (name !== \"\" && type !== \"\" && emotion !== \"\") {\n      await api.put(`/updatedTask/${id}`, {\n        name,\n        type,\n        emotion\n      }).then(response => {\n        console.log(response);\n        console.log(JSON.stringify({\n          \"tratamento\": name,\n          \"codigo\": type,\n          \"nome\": emotion\n        }));\n        console.log(\"Atividade atualizada!\");\n        window.alert('Atividade atualizada!');\n        document.getElementById(\"rows\").style.backgroundColor = \"#fff\";\n      });\n    } else {\n      window.alert('Prencha todos os campos');\n    }\n  }\n\n  async function deleteActivity(id) {\n    swal({\n      title: 'Tem certeza que deseja deletar a tarefa?',\n      text: 'Uma vez deletada, não poderá recuperá-la',\n      icon: 'warning',\n      buttons: [\"Não\", \"Deletar\"]\n    }).then(willDeletar => {\n      if (willDeletar) {\n        console.log(\"id delete\", id);\n        api.delete(`/deletedTask/${id}`).then(response => {\n          console.log(response.data);\n          swal(\"Atividade apagada!\");\n          const newList = list.filter(activity => activity.id !== id);\n          setList(newList);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(App, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Kids\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button button-info\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"navbar-brand float-center\",\n        children: \"Atividades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          encType: \"multipar/form-data\",\n          \"fit-content\": \"true\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chip\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: kid_photo,\n              alt: \"Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), kid_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/addTask3\",\n              search: `${kid_id}`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-info d-inline-block\",\n              width: \"auto\",\n              onClick: () => {\n                saveId(kid_id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table table-responsive table-selectable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"imagem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"emo\\xE7\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"situa\\xE7\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"alternativas de resposta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"resultado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: list.map((activity, index) => {\n                return /*#__PURE__*/_jsxDEV(ActivityList, {\n                  activity: activity,\n                  result: result[index],\n                  updateActivity: updateActivity,\n                  deleteActivity: deleteActivity\n                }, activity.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TasksKid, \"uKcnJjRmFtZdyuAzWbxFQqDXlnQ=\", false, function () {\n  return [useKidContext];\n});\n\n_c = TasksKid;\nexport default TasksKid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksKid\");","map":{"version":3,"sources":["D:/nayarawatanuki/OneDrive/projects/project-emotions/src/frontend/pages/PsycAcess/Activities/index.js"],"names":["React","useState","useEffect","Link","GlobalStyle","App","Container","Content","Table","api","useKidContext","ActivityList","TasksKid","list","setList","kid_id","kid_name","kid_photo","saveId","console","log","get","then","response","activity","data","catch","error","result","setResult","results","updateActivity","id","name","type","emotion","put","JSON","stringify","window","alert","document","getElementById","style","backgroundColor","deleteActivity","swal","title","text","icon","buttons","willDeletar","delete","newList","filter","pathname","search","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport GlobalStyle from '../../../global/styles';\r\nimport { App, Container, Content, Table } from './styles';\r\n\r\nimport api from '../../../services/api';\r\nimport { useKidContext } from '../../../context/kidContext';\r\nimport ActivityList from '../../../components/PsycAcess/ActivityList';\r\n\r\nfunction TasksKid() {\r\n\r\n    const [list, setList] = useState([]);\r\n    const {kid_id, kid_name, kid_photo, saveId} = useKidContext();\r\n\r\n    console.log({kid_id, kid_name})\r\n\r\n    useEffect(() => {\r\n        console.log('entrou')\r\n        if(kid_id && kid_name){\r\n        api.get(`/tasks/${kid_id}/${kid_name}/listTasks`)\r\n        .then((response) => {\r\n            console.log({activity: response.data})\r\n            setList(response.data)\r\n        }).catch((error) => {\r\n            console.error('error', error)\r\n        });}\r\n    },[kid_id, kid_name]);\r\n\r\n    const [result, setResult] = useState([]);\r\n  \r\n    useEffect(() => {\r\n        if(kid_id){\r\n        api.get(`/tasks/${kid_id}/listTaskResult`)\r\n        .then((response) => {\r\n        console.log({results: response.data});\r\n        setResult(response.data);\r\n        }).catch((error) => {\r\n            console.error('error', error) \r\n        });}\r\n    }, [kid_id]);\r\n\r\n    async function updateActivity({id, name, type, emotion}){ \r\n\r\n        if(name !== \"\" && type !== \"\" && emotion !== \"\"){\r\n            await api.put(`/updatedTask/${id}`,\r\n              { name, type, emotion }\r\n            )\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(JSON.stringify({\r\n                    \"tratamento\": name,\r\n                    \"codigo\": type,\r\n                    \"nome\": emotion\r\n                }));\r\n                console.log(\"Atividade atualizada!\");\r\n                window.alert('Atividade atualizada!');\r\n                document.getElementById(\"rows\").style.backgroundColor = \"#fff\";\r\n            });\r\n        }else{\r\n            window.alert('Prencha todos os campos')\r\n        }\r\n    }\r\n\r\n    async function deleteActivity(id){\r\n        swal({\r\n            title: 'Tem certeza que deseja deletar a tarefa?',\r\n            text: 'Uma vez deletada, não poderá recuperá-la',\r\n            icon: 'warning',\r\n            buttons: [\"Não\", \"Deletar\"]\r\n          }).then((willDeletar) => {\r\n            if(willDeletar) {\r\n                console.log(\"id delete\", id);\r\n\r\n                api.delete(`/deletedTask/${id}`)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    swal(\"Atividade apagada!\");\r\n\r\n                    const newList = list.filter((activity) => activity.id !== id);\r\n                    setList(newList);\r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n                });\r\n            }\r\n          })\r\n    }\r\n  \r\n    return (\r\n        <App>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <Link to=\"/Kids\">\r\n                    <button type=\"button\" className=\"button button-info\">Voltar</button>\r\n                </Link>\r\n                <h5 className=\"navbar-brand float-center\">Atividades</h5>\r\n                <h1> </h1>\r\n            </nav>\r\n            <Container>\r\n                <Content>\r\n                    <form encType='multipar/form-data' fit-content=\"true\">\r\n                        <div className=\"chip\">\r\n                            <img src={kid_photo} alt=\"Person\" />\r\n                            {kid_name}\r\n                        </div>\r\n                        <Link to={{ pathname: \"/addTask3\", search:`${kid_id}` }}>\r\n                            <button\r\n                            className=\"btn btn-sm btn-info d-inline-block\" width=\"auto\"\r\n                            onClick={() => {\r\n                                saveId(kid_id)\r\n                            }}\r\n                            >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Table className= \"table table-responsive table-selectable\" >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>imagem</th>\r\n                                    <th>nome</th>\r\n                                    <th>emoção</th>\r\n                                    <th>situação</th>\r\n                                    <th>alternativas de resposta</th>\r\n                                    <th>resultado</th>\r\n                                    <th> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {list.map((activity, index) => {\r\n                                    return (\r\n                                        <ActivityList key={activity.id}\r\n                                            activity={activity}\r\n                                            result = {result[index]} \r\n                                            updateActivity={updateActivity} \r\n                                            deleteActivity={deleteActivity} \r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </form>\r\n                </Content>\r\n                <GlobalStyle />\r\n            </Container>\r\n        </App>  \r\n    );\r\n}\r\n\r\nexport default TasksKid;"]},"metadata":{},"sourceType":"module"}