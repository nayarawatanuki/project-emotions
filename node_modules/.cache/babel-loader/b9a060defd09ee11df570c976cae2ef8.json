{"ast":null,"code":"var _jsxFileName = \"D:\\\\nayarawatanuki\\\\OneDrive\\\\projects\\\\Emotions Project\\\\project-emotions\\\\src\\\\frontend\\\\context\\\\taskContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/React.createContext();\n\nconst TaskProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [task_id, setTask_id] = useState();\n  console.log(\"task \", task_id);\n  useEffect(() => {\n    const savedTask = window.sessionStorage.getItem('task');\n\n    if (savedTask) {\n      const {\n        id\n      } = JSON.parse(savedTask);\n      console.log('id: ', id);\n      setTask_id(id);\n    }\n  }, []);\n\n  function saveId(id) {\n    const savedTask = window.sessionStorage.getItem('task');\n    const savedKidJSON = JSON.parse(savedTask) || {};\n    window.sessionStorage.setItem('kid', JSON.stringify({ ...savedKidJSON,\n      id\n    }));\n    setTask_id(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      task_id,\n      saveId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskProvider, \"PkrP1ulGJkJMTQQ9pQxdoAXHWBs=\");\n\n_c = TaskProvider;\nexport default TaskProvider;\nexport function useTaskContext() {\n  _s2();\n\n  const context = useContext(TaskContext);\n\n  if (!context) {\n    console.error();\n    throw new Error('useTaskContext must be used within a TaskContext.Provider.');\n  }\n\n  return context;\n}\n\n_s2(useTaskContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"sources":["D:/nayarawatanuki/OneDrive/projects/Emotions Project/project-emotions/src/frontend/context/taskContext.js"],"names":["React","useContext","useState","useEffect","TaskContext","createContext","TaskProvider","children","task_id","setTask_id","console","log","savedTask","window","sessionStorage","getItem","id","JSON","parse","saveId","savedKidJSON","setItem","stringify","useTaskContext","context","error","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AAEP,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,OAArB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,CAAlB;;AACA,QAAGH,SAAH,EAAc;AACV,YAAM;AAACI,QAAAA;AAAD,UAAOC,IAAI,CAACC,KAAL,CAAWN,SAAX,CAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,EAApB;AACAP,MAAAA,UAAU,CAACO,EAAD,CAAV;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,WAASG,MAAT,CAAgBH,EAAhB,EAAoB;AAChB,UAAMJ,SAAS,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,CAAlB;AACA,UAAMK,YAAY,GAAGH,IAAI,CAACC,KAAL,CAAWN,SAAX,KAAyB,EAA9C;AAEAC,IAAAA,MAAM,CAACC,cAAP,CAAsBO,OAAtB,CAA8B,KAA9B,EAAqCJ,IAAI,CAACK,SAAL,CAAe,EAAC,GAAGF,YAAJ;AAAkBJ,MAAAA;AAAlB,KAAf,CAArC;AACAP,IAAAA,UAAU,CAACO,EAAD,CAAV;AACH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHR,MAAAA,OADG;AAEHW,MAAAA;AAFG,KADX;AAAA,cAMKZ;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhCD;;GAAMD,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf;AAEA,OAAO,SAASiB,cAAT,GAA0B;AAAA;;AAC7B,QAAMC,OAAO,GAAGvB,UAAU,CAACG,WAAD,CAA1B;;AAEA,MAAI,CAACoB,OAAL,EAAc;AACVd,IAAAA,OAAO,CAACe,KAAR;AACA,UAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;AACH;;AAED,SAAOF,OAAP;AACH;;IATeD,c","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const TaskContext = React.createContext()\r\n\r\nconst TaskProvider = ({ children }) => {\r\n    const [task_id, setTask_id] = useState();\r\n\r\n    console.log(\"task \", task_id)\r\n\r\n    useEffect(() => {\r\n        const savedTask = window.sessionStorage.getItem('task');\r\n        if(savedTask) {\r\n            const {id} = JSON.parse(savedTask);\r\n            console.log('id: ', id);\r\n            setTask_id(id);\r\n        }\r\n    }, [])\r\n\r\n    function saveId(id) {\r\n        const savedTask = window.sessionStorage.getItem('task');\r\n        const savedKidJSON = JSON.parse(savedTask) || {}\r\n        \r\n        window.sessionStorage.setItem('kid', JSON.stringify({...savedKidJSON, id}));\r\n        setTask_id(id);\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider\r\n            value={{\r\n                task_id,\r\n                saveId\r\n            }}\r\n        >\r\n            {children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskProvider\r\n\r\nexport function useTaskContext() {\r\n    const context = useContext(TaskContext)\r\n\r\n    if (!context) {\r\n        console.error();\r\n        throw new Error('useTaskContext must be used within a TaskContext.Provider.')\r\n    }\r\n\r\n    return context\r\n}"]},"metadata":{},"sourceType":"module"}