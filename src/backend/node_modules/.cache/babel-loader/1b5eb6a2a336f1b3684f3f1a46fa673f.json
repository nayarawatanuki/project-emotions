{"ast":null,"code":"/*!\n 2021 Jason Mulligan <jason.mulligan@avoidwork.com>\n @version 8.0.6\n*/\n!function (i, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (i = \"undefined\" != typeof globalThis ? globalThis : i || self).filesize = t();\n}(this, function () {\n  \"use strict\";\n\n  var i = /^(b|B)$/,\n      t = {\n    iec: {\n      bits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      e = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  },\n      o = {\n    floor: Math.floor,\n    ceil: Math.ceil\n  };\n\n  function n(n) {\n    var r,\n        a,\n        b,\n        s,\n        l,\n        c,\n        f,\n        d,\n        p,\n        u,\n        h,\n        B,\n        g,\n        y,\n        M,\n        m,\n        v,\n        x,\n        N,\n        T,\n        j,\n        E = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        w = [],\n        P = 0;\n    if (isNaN(n)) throw new TypeError(\"Invalid number\");\n    if (b = !0 === E.bits, M = !0 === E.unix, B = !0 === E.pad, a = E.base || 10, g = void 0 !== E.round ? E.round : M ? 1 : 2, f = void 0 !== E.locale ? E.locale : \"\", d = E.localeOptions || {}, m = void 0 !== E.separator ? E.separator : \"\", v = void 0 !== E.spacer ? E.spacer : M ? \"\" : \" \", N = E.symbols || {}, x = 2 === a ? E.standard || \"iec\" : \"jedec\", h = E.output || \"string\", l = !0 === E.fullform, c = E.fullforms instanceof Array ? E.fullforms : [], r = void 0 !== E.exponent ? E.exponent : -1, T = o[E.roundingMethod] || Math.round, p = (u = Number(n)) < 0, s = a > 2 ? 1e3 : 1024, j = !1 === isNaN(E.precision) ? parseInt(E.precision, 10) : 0, p && (u = -u), (-1 === r || isNaN(r)) && (r = Math.floor(Math.log(u) / Math.log(s))) < 0 && (r = 0), r > 8 && (j > 0 && (j += 8 - r), r = 8), \"exponent\" === h) return r;\n    if (0 === u) w[0] = 0, y = w[1] = M ? \"\" : t[x][b ? \"bits\" : \"bytes\"][r];else {\n      P = u / (2 === a ? Math.pow(2, 10 * r) : Math.pow(1e3, r)), b && (P *= 8) >= s && r < 8 && (P /= s, r++);\n      var k = Math.pow(10, r > 0 ? g : 0);\n      w[0] = T(P * k) / k, w[0] === s && r < 8 && void 0 === E.exponent && (w[0] = 1, r++), y = w[1] = 10 === a && 1 === r ? b ? \"kbit\" : \"kB\" : t[x][b ? \"bits\" : \"bytes\"][r], M && (w[1] = w[1].charAt(0), i.test(w[1]) && (w[0] = Math.floor(w[0]), w[1] = \"\"));\n    }\n\n    if (p && (w[0] = -w[0]), j > 0 && (w[0] = w[0].toPrecision(j)), w[1] = N[w[1]] || w[1], !0 === f ? w[0] = w[0].toLocaleString() : f.length > 0 ? w[0] = w[0].toLocaleString(f, d) : m.length > 0 && (w[0] = w[0].toString().replace(\".\", m)), B && !1 === Number.isInteger(w[0]) && g > 0) {\n      var G = m || \".\",\n          K = w[0].toString().split(G),\n          S = K[1] || \"\",\n          Y = S.length,\n          Z = g - Y;\n      w[0] = \"\".concat(K[0]).concat(G).concat(S.padEnd(Y + Z, \"0\"));\n    }\n\n    return l && (w[1] = c[r] ? c[r] : e[x][r] + (b ? \"bit\" : \"byte\") + (1 === w[0] ? \"\" : \"s\")), \"array\" === h ? w : \"object\" === h ? {\n      value: w[0],\n      symbol: w[1],\n      exponent: r,\n      unit: y\n    } : w.join(v);\n  }\n\n  return n.partial = function (i) {\n    return function (t) {\n      return n(t, i);\n    };\n  }, n;\n});","map":{"version":3,"sources":["../src/filesize.js"],"names":["b","symbol","iec","bits","bytes","jedec","fullform","roundingFuncs","floor","Math","ceil","filesize","arg","descriptor","result","val","e","base","full","fullforms","locale","localeOptions","neg","num","output","pad","round","u","unix","separator","spacer","standard","symbols","roundingFunc","precision","isNaN","TypeError","Array","exponent","roundingMethod","Number","parseInt","log","pow","p","charAt","test","toPrecision","toLocaleString","length","toString","replace","isInteger","x","tmp","split","s","l","n","padEnd","value","unit","join","partial","opt"],"mappings":"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","sourcesContent":["const b = /^(b|B)$/,\r\n\tsymbol = {\r\n\t\tiec: {\r\n\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t},\r\n\t\tjedec: {\r\n\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t}\r\n\t},\r\n\tfullform = {\r\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t},\r\n\troundingFuncs = {\r\n\t\tfloor: Math.floor,\r\n\t\tceil: Math.ceil\r\n\t};\r\n\r\n/**\r\n * filesize\r\n *\r\n * @method filesize\r\n * @param  {Mixed}   arg        String, Int or Float to transform\r\n * @param  {Object}  descriptor [Optional] Flags\r\n * @return {String}             Readable file size String\r\n */\r\nfunction filesize (arg, descriptor = {}) {\r\n\tlet result = [],\r\n\t\tval = 0,\r\n\t\te, base, bits, ceil, full, fullforms, locale, localeOptions, neg, num, output, pad, round, u, unix, separator, spacer, standard, symbols, roundingFunc, precision;\r\n\r\n\tif (isNaN(arg)) {\r\n\t\tthrow new TypeError(\"Invalid number\");\r\n\t}\r\n\r\n\tbits = descriptor.bits === true;\r\n\tunix = descriptor.unix === true;\r\n\tpad = descriptor.pad === true;\r\n\tbase = descriptor.base || 10;\r\n\tround = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\r\n\tlocale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\r\n\tlocaleOptions = descriptor.localeOptions || {};\r\n\tseparator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\r\n\tspacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\r\n\tsymbols = descriptor.symbols || {};\r\n\tstandard = base === 2 ? descriptor.standard || \"iec\" : \"jedec\";\r\n\toutput = descriptor.output || \"string\";\r\n\tfull = descriptor.fullform === true;\r\n\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\r\n\te = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\r\n\troundingFunc = roundingFuncs[descriptor.roundingMethod] || Math.round;\r\n\tnum = Number(arg);\r\n\tneg = num < 0;\r\n\tceil = base > 2 ? 1000 : 1024;\r\n\tprecision = isNaN(descriptor.precision) === false ? parseInt(descriptor.precision, 10) : 0;\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === \"exponent\") {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = base === 10 && e === 1 ? bits ? \"kbit\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\r\n\t\tif (unix) {\r\n\t\t\tresult[1] = result[1].charAt(0);\r\n\r\n\t\t\tif (b.test(result[1])) {\r\n\t\t\t\tresult[0] = Math.floor(result[0]);\r\n\t\t\t\tresult[1] = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t}\r\n\r\n\tif (pad && Number.isInteger(result[0]) === false && round > 0) {\r\n\t\tconst x = separator || \".\",\r\n\t\t\ttmp = result[0].toString().split(x),\r\n\t\t\ts = tmp[1] || \"\",\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, \"0\")}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === \"array\" ? result : output === \"object\" ? {value: result[0], symbol: result[1], exponent: e, unit: u} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\nexport default filesize;\r\n"]},"metadata":{},"sourceType":"script"}